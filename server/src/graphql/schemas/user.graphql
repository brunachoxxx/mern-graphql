scalar EmailAdress
scalar JWT
scalar Date

type Query {
  users: [User]
  user(id: ID!): User
}

type User {
  name: String
  email: EmailAdress
  password: String
  state: Boolean
  role: String
  auth: Boolean
  img: String
  id: ID
  createdAt: Date
  updatedAt: Date
}

type UserMutationResponse {
  code: String!
  success: Boolean!
  message: String!
  user: User
  token: JWT
}

type Mutation {
  regUser(email: String!, password: String!): UserMutationResponse

  loginUser(email: String!, password: String!): UserMutationResponse

  updateUser(
    id: ID!
    name: String
    email: EmailAdress
    password: String
    img: String
  ): UserMutationResponse

  delUser(id: ID!): UserMutationResponse
}
